/* eslint-disable react/no-unescaped-entities */
import { useEffect, useState } from "react";
import Head from "next/head";
import { Container, Col, Row } from "react-bootstrap";
import ViewAllPropertyCss from "../../styles/ViewAllProperty.module.css";
import Image from "next/image";
import ViewAllProps from "../../../public/images/viewAllProps.png";
import { useRouter } from "next/router";
import axios from "axios";
import PropNotFoundImg from "../../../public/images/vector/golf-hole.png";
import Loader from "../../../common components/loader";
import Dot from "../../../public/images/vector/dot.svg";
import dynamic from "next/dynamic";
import React from "react";

const BottomSection = dynamic(() => import("../../../common components/bottomGroup"), {
  suspense: true,
});
const ViewAllProperty = () => {
  const RouterRef = useRouter();
  const [AllPropertyDataLosAngeles, setAllPropertyDataLosAngeles] = useState([]);
  const [AllPropertyDataCharleston, setAllPropertyDataCharleston] = useState([]);
  const [AllPropertyDataMiami, setAllPropertyDataMiami] = useState([]);
  const [AllPropertyDataChicago, setAllPropertyDataChicago] =
    useState([]);
  const [IsLoaderVisible, setIsLoaderVisible] = useState(true);


  const LosAngelesLat = 34.0549076;
  const LosAngelesLong = -118.242643;
  const CharlestonLat = 32.7764749;
  const CharlestonLong = -79.9310512;
  const MiamiLat = 25.7616798;
  const MiamiLong = -80.1917902;
  const ChicagoLat = 41.8781136;
  const ChicagoLong = -87.6297982;

  useEffect(() => {

    const GetPropDataLosAngelesFunc = async () => {
      try {
        const GetPropertyDataRes = await axios.get(
          `${process.env.NEXT_PUBLIC_API_URL}/v1/property?limit=12&latitude=${LosAngelesLat}&longitude=${LosAngelesLong}&page=1&sort=updatedAt&status=active`
        );
        if (GetPropertyDataRes.status === 200) {
          setAllPropertyDataLosAngeles(GetPropertyDataRes.data.data);
          setIsLoaderVisible(false);
        }
      } catch (error) { }
    };
    GetPropDataLosAngelesFunc();

    const GetPropDataCharlestonFunc = async () => {
      try {
        const GetPropertyDataRes = await axios.get(
          `${process.env.NEXT_PUBLIC_API_URL}/v1/property?limit=12&latitude=${CharlestonLat}&longitude=${CharlestonLong}&page=1&sort=updatedAt&status=active`
        );
        if (GetPropertyDataRes.status === 200) {
          setAllPropertyDataCharleston(GetPropertyDataRes.data.data);
        }
      } catch (error) { }
    };
    GetPropDataCharlestonFunc();

    const GetPropDataMiamiFunc = async () => {
      try {
        const GetPropertyDataRes = await axios.get(
          `${process.env.NEXT_PUBLIC_API_URL}/v1/property?limit=12&latitude=${MiamiLat}&longitude=${MiamiLong}&page=1&sort=updatedAt&status=active`
        );
        if (GetPropertyDataRes.status === 200) {
          setAllPropertyDataMiami(GetPropertyDataRes.data.data);
        }
      } catch (error) { }
    };
    GetPropDataMiamiFunc();

    const GetPropDataChicagoLatFunc = async () => {
      try {
        const GetPropertyDataRes = await axios.get(
          `${process.env.NEXT_PUBLIC_API_URL}/v1/property?limit=12&latitude=${ChicagoLat}&longitude=${ChicagoLong}&page=1&sort=updatedAt&status=active`
        );
        if (GetPropertyDataRes.status === 200) {
          setAllPropertyDataChicago(GetPropertyDataRes.data.data);
        }
      } catch (error) { }
    };
    GetPropDataChicagoLatFunc();

    return () => {
      GetPropDataLosAngelesFunc();
      GetPropDataCharlestonFunc();
      GetPropDataMiamiFunc();
      GetPropDataChicagoLatFunc();
    };
  }, []);

  return (
    <>
      <Head>
        <title>{process.env.NEXT_PUBLIC_APP_NAME} | View All Property</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      {/* TOP IMAGE OF VIEW ALL PROPERTY PAGE */}
      <div className={ViewAllPropertyCss.headImage}>
        <Image
          src={ViewAllProps}
          alt="View All Property Image"
          fill
          className={ViewAllPropertyCss.imageChild}
        ></Image>
      </div>

      <div className={ViewAllPropertyCss.textContainer}>
        <Container>


          <h1 className={ViewAllPropertyCss.golfCourse}> Find unique, event friendly homes, villas and estates</h1>
          <p className={ViewAllPropertyCss.para}>
            The privacy factor, the wow factor…
          </p>
          <p className={ViewAllPropertyCss.para}>
            The demand for private and unique event locations has planners increasingly turning their
            attention to private home and estate venues. As the luster of typical banquet halls and hotel
            ballrooms fade, the need grows for an organized platform containing the world’s most amazing
            event-quality/permissible private residences.

          </p>
          <p className={ViewAllPropertyCss.para}>
            Los Angeles, Charleston, Miami, Chicago; whether you’re looking to host your guests in a
            quaint backyard or on a private island estate, look no further than Ventify.

          </p>
        </Container>
      </div>

      <div className={ViewAllPropertyCss.view_prop_cards_Container}>
        <Container>
          <Row className={ViewAllPropertyCss.columnParent}>
            {/* Los Angeles */}
            <h3 className={ViewAllPropertyCss.heading}>Los Angeles</h3>
            {IsLoaderVisible ? (
              <>
                <div className={ViewAllPropertyCss.loader_main_div}>
                  <Loader />
                </div>
              </>
            ) : !IsLoaderVisible && AllPropertyDataLosAngeles.length === 0 ? (
              <div className={ViewAllPropertyCss.no_property_main_div}>
                <Image
                  width={70}
                  height={70}
                  src={PropNotFoundImg}
                  alt="property not found"
                  className={ViewAllPropertyCss.no_property_image}
                ></Image>
                <p className={ViewAllPropertyCss.no_property_text}>
                  No Property Found!
                </p>
              </div>
            ) : (
              <>
                {" "}
                {/* SILDER CARDS START */}
                {AllPropertyDataLosAngeles.map((Data, Index) => {
                  return (
                    <>
                      <Col
                        md={4}
                        key={Data.id}
                        className={ViewAllPropertyCss.carouselBlock}
                      >
                        <Image
                          onClick={(e) => {
                            RouterRef.push(
                              `/search/${Data.slug}`
                            );
                          }}
                          src={
                            Data.imageUrl
                              ? Data.imageUrl
                              : "/images/noImageFound.png"
                          }
                          alt={`image`}
                          fill
                          className={ViewAllPropertyCss.carouselImage}
                        ></Image>

                        <div
                          onClick={(e) => {
                            RouterRef.push(
                              `/search/${Data.slug}`
                            );
                          }}
                          className={ViewAllPropertyCss.image_container}
                        >
                          <p
                            className={
                              ViewAllPropertyCss.price_of_property_text_from
                            }
                          >
                            From $
                            <span
                              className={
                                ViewAllPropertyCss.price_of_property_text
                              }
                            >
                              {Data.price >= 0.5
                                ? Math.ceil(Data.price)
                                : Math.floor(Data.price)
                                  ? Data.price >= 0.5
                                    ? Math.ceil(Data.price)
                                    : Math.floor(Data.price)
                                  : 0}
                              /Night
                            </span>
                          </p>

                          <h4
                            onClick={(e) => {
                              RouterRef.push(
                                `/search/${Data.slug}`
                              );
                            }}
                            className={ViewAllPropertyCss.carouselHeading}
                          >
                            {Data.name ? Data.name : "N/A"}
                          </h4>
                        </div>


                        <div
                          onClick={(e) => {
                            RouterRef.push(
                              `/search/${Data.slug}`
                            );
                          }}
                          className={ViewAllPropertyCss.image_container}
                        >
                          <span className={ViewAllPropertyCss.discribeOfCard}>
                            {Data.bedrooms ? Data.bedrooms : 1} Bed Rooms
                          </span>
                          <Image
                            src={Dot}
                            alt="Dot"
                            className={ViewAllPropertyCss.dot}
                          ></Image>
                          <span className={ViewAllPropertyCss.discribeOfCard}>
                            {Data.accomodation ? Data.accomodation : 1} Guests
                            Villa
                          </span>

                        </div>
                      </Col>
                    </>
                  );
                })}
              </>
            )}

            {/* Charleston */}
            <h3 className={ViewAllPropertyCss.heading}>Charleston</h3>
            {IsLoaderVisible ? (
              <>
                <div className={ViewAllPropertyCss.loader_main_div}>
                  <Loader />
                </div>
              </>
            ) : !IsLoaderVisible && AllPropertyDataCharleston.length === 0 ? (
              <div className={ViewAllPropertyCss.no_property_main_div}>
                <Image
                  width={70}
                  height={70}
                  src={PropNotFoundImg}
                  alt="property not found"
                  className={ViewAllPropertyCss.no_property_image}
                ></Image>
                <p className={ViewAllPropertyCss.no_property_text}>
                  No Property Found!
                </p>
              </div>
            ) : (
              <>
                {" "}
                {AllPropertyDataCharleston.map((Data, Index) => {
                  return (
                    <Col
                      md={4}
                      key={Data.id}
                      className={ViewAllPropertyCss.carouselBlock}
                    >
                      <Image
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        src={Data.imageUrl}
                        alt={`image`}
                        fill
                        className={ViewAllPropertyCss.carouselImage}
                      ></Image>

                      <div
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        className={ViewAllPropertyCss.image_container}
                      >
                        <p
                          className={
                            ViewAllPropertyCss.price_of_property_text_from
                          }
                        >
                          From $
                          <span
                            className={
                              ViewAllPropertyCss.price_of_property_text
                            }
                          >
                            {Data.price >= 0.5
                              ? Math.ceil(Data.price)
                              : Math.floor(Data.price)}
                            /Night
                          </span>
                        </p>

                        <h4
                          onClick={(e) => {
                            RouterRef.push(
                              `/search/${Data.slug}`
                            );
                          }}
                          className={ViewAllPropertyCss.carouselHeading}
                        >
                          {Data.name}
                        </h4>
                      </div>

                      <div
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        className={ViewAllPropertyCss.image_container}
                      >
                        <span className={ViewAllPropertyCss.discribeOfCard}>
                          {Data.bedrooms ? Data.bedrooms : 1} Bed Rooms
                        </span>
                        <Image
                          src={Dot}
                          alt="Dot"
                          className={ViewAllPropertyCss.dot}
                        ></Image>
                        <span className={ViewAllPropertyCss.discribeOfCard}>
                          {Data.accomodation} Guests Villa
                        </span>

                      </div>
                    </Col>
                  );
                })}{" "}
              </>
            )}

            {/* Miami */}
            <h3 className={ViewAllPropertyCss.heading}>Miami</h3>
            {IsLoaderVisible ? (
              <>
                <div className={ViewAllPropertyCss.loader_main_div}>
                  <Loader />
                </div>
              </>
            ) : !IsLoaderVisible && AllPropertyDataMiami.length === 0 ? (
              <div className={ViewAllPropertyCss.no_property_main_div}>
                <Image
                  width={70}
                  height={70}
                  src={PropNotFoundImg}
                  alt="property not found"
                  className={ViewAllPropertyCss.no_property_image}
                ></Image>
                <p className={ViewAllPropertyCss.no_property_text}>
                  No Property Found!
                </p>
              </div>
            ) : (
              <>
                {" "}
                {AllPropertyDataMiami.map((Data, Index) => {
                  return (
                    <Col
                      md={4}
                      key={Data.id}
                      className={ViewAllPropertyCss.carouselBlock}
                    >
                      <Image
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        src={Data.imageUrl}
                        alt={`image`}
                        fill
                        className={ViewAllPropertyCss.carouselImage}
                      ></Image>

                      <div
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        className={ViewAllPropertyCss.image_container}
                      >
                        <p
                          className={
                            ViewAllPropertyCss.price_of_property_text_from
                          }
                        >
                          From $
                          <span
                            className={
                              ViewAllPropertyCss.price_of_property_text
                            }
                          >
                            {Data.price >= 0.5
                              ? Math.ceil(Data.price)
                              : Math.floor(Data.price)}
                            /Night
                          </span>
                        </p>

                        <h4
                          onClick={(e) => {
                            RouterRef.push(
                              `/search/${Data.slug}`
                            );
                          }}
                          className={ViewAllPropertyCss.carouselHeading}
                        >
                          {Data.name}
                        </h4>
                      </div>

                      <div
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        className={ViewAllPropertyCss.image_container}
                      >
                        <span className={ViewAllPropertyCss.discribeOfCard}>
                          {Data.bedrooms ? Data.bedrooms : 1} Bed Rooms
                        </span>
                        <Image
                          src={Dot}
                          alt="Dot"
                          className={ViewAllPropertyCss.dot}
                        ></Image>
                        <span className={ViewAllPropertyCss.discribeOfCard}>
                          {Data.accomodation} Guests Villa
                        </span>

                      </div>
                    </Col>
                  );
                })}
              </>
            )}

            {/* Chicago */}
            <h3 className={ViewAllPropertyCss.heading}>Chicago</h3>
            {IsLoaderVisible ? (
              <>
                <div className={ViewAllPropertyCss.loader_main_div}>
                  <Loader />
                </div>
              </>
            ) : !IsLoaderVisible &&
              AllPropertyDataChicago.length === 0 ? (
              <div className={ViewAllPropertyCss.no_property_main_div}>
                <Image
                  width={70}
                  height={70}
                  src={PropNotFoundImg}
                  alt="property not found"
                  className={ViewAllPropertyCss.no_property_image}
                ></Image>
                <p className={ViewAllPropertyCss.no_property_text}>
                  No Property Found!
                </p>
              </div>
            ) : (
              <>
                {" "}
                {AllPropertyDataChicago.map((Data, Index) => {
                  return (
                    <Col
                      md={4}
                      key={Data.id}
                      className={ViewAllPropertyCss.carouselBlock}
                    >
                      <Image
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        src={Data.imageUrl}
                        alt={`image`}
                        fill
                        className={ViewAllPropertyCss.carouselImage}
                      ></Image>

                      <div
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        className={ViewAllPropertyCss.image_container}
                      >
                        <p
                          className={
                            ViewAllPropertyCss.price_of_property_text_from
                          }
                        >
                          From $
                          <span
                            className={
                              ViewAllPropertyCss.price_of_property_text
                            }
                          >
                            {Data.price >= 0.5
                              ? Math.ceil(Data.price)
                              : Math.floor(Data.price)}
                            /Night
                          </span>
                        </p>

                        <h4
                          onClick={(e) => {
                            RouterRef.push(
                              `/search/${Data.slug}`
                            );
                          }}
                          className={ViewAllPropertyCss.carouselHeading}
                        >
                          {Data.name}
                        </h4>
                      </div>

                      <div
                        onClick={(e) => {
                          RouterRef.push(
                            `/search/${Data.slug}`
                          );
                        }}
                        className={ViewAllPropertyCss.image_container}
                      >
                        <span className={ViewAllPropertyCss.discribeOfCard}>
                          {Data.bedrooms ? Data.bedrooms : 1} Bed Rooms
                        </span>
                        <Image
                          src={Dot}
                          alt="Dot"
                          className={ViewAllPropertyCss.dot}
                        ></Image>
                        <span className={ViewAllPropertyCss.discribeOfCard}>
                          {Data.accomodation} Guests Villa
                        </span>

                      </div>
                    </Col>
                  );
                })}{" "}
              </>
            )}
          </Row>
        </Container>
      </div>

      {/*  -----------------------------           BOTTOM IMAGE SECTION         ----------------------------  */}

      <BottomSection />
    </>
  );
};

export default ViewAllProperty;
